version: 2
jobs:
  lint_tests:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            npm install
            npm install mkdirp@latest
      - run:
          name: Test consistent coding style (Lint)
          command: npm run watch:lint
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  integration_tests:
    docker:
      - image: node:8
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_DB: circleci
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: password
    environment:
      DATABASE_URL_TESTING: postgres://circleci:password@localhost:5432/circleci
      APP_DOMAIN: mg.sgroup.ga
      MAILGUN_APIKEY: 6fbe48c43287c22277241ed66f8ad3c6-f696beb4-86a8b6f2
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Integration testing
          command: npm run test:integration

  build:
    docker:
      - image: circleci/node:12
    working_directory: ~/CNPM
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'd0:b9:a1:6a:8c:16:27:9f:14:13:76:ba:07:25:f4:7e'
      - checkout:
      - run:
          name: Setup
          command: |
            npm install
            npm run build
            ssh-keyscan 35.222.61.214 >> ~/.ssh/known_hosts
      - persist_to_workspace:
          root: /home/circleci
          paths: CNPM

  deploy-staging:
    machine:
      enabled: true
    working_directory: /home/circleci/
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploy Over SSH
          command: |
            cd CNPM
            chmod 777 ./.circleci/deploy-staging.sh
            ./.circleci/deploy-staging.sh

  deploy-production:
    machine:
      enabled: true
    working_directory: /home/circleci/
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploy Over SSH
          command: |
            cd CNPM
            chmod 777 ./.circleci/deploy-production.sh
            ./.circleci/deploy-production.sh

workflows:
  version: 2
  # tests:
  #   jobs:
  #     - lint_tests:
  #         filters:
  #           branches:
  #             ignore:
  #               - dev
  #               - master
  #     - integration_tests:
  #         requires:
  #           - lint_tests
  #         filters:
  #           branches:
  #             ignore:
  #               - dev
  #               - master

  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
                - production
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: production
